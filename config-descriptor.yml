descriptor:
  name: LSC Control
  description: Program for managing a battery, generators connected to it and large energy consumers
  repositoryLink: https://github.com/Navatusein/GTNH-OC-LSC-Control
  fieldGroups:
    - key: logger
      name: Logger
      fields:
        - key: name
          type: string
          default: LSC Control
          label: Name
          description: Name witch will be displayed in discord

        - key: timeZone
          type: integer
          default: 3
          label: Time Zone
          description: Your time zone

        - key: discordWebhookUrl
          type: url
          default: ""
          optional: true
          label: Discord Webhook Url
          description: Discord Webhook Url for notifications

    - key: lsc
      name: LSC
      fields:
        - key: useMedian
          type: boolean
          default: false
          class: switch
          label: Use Median
          description: Use median in calculations

        - key: wirelessMode
          type: boolean
          default: false
          class: switch
          label: Wireless Mode
          description: Use wireless network mode

        - key: version
          type: select
          default: "2.7"
          options:
            - label: "2.6"
              value: "2.6"
            - label: "2.7"
              value: "2.7"
            - label: "custom"
              value: "custom"
          label: GTNH Version
          description: GTNH version for parse sensor information

    - key: lscCustomLines
      name: Sensor custom lines
      description: Only change values here if you have specified a custom version
      fields:
      - key: storedEu
        type: integer
        optional: true
        default: 2
        label: EU Stored Line
        description: EU Stored line

      - key: capacity
        type: integer
        optional: true
        default: 5
        label: Capacity Line
        description: Total Capacity line

      - key: avgEuIn
        type: integer
        optional: true
        default: 10
        label: Avg EU In Line
        description: "Avg EU IN: 0 (last 5 seconds) line"

      - key: avgEuOut
        type: integer
        optional: true
        default: 11
        label: Avg EU Out Line
        description: "Avg EU OUT: 0 (last 5 seconds) line"

      - key: capacitorUHV
        type: integer
        optional: true
        default: 19
        label: UHV Capacitors Count Line
        description: UHV Capacitors detected line

      - key: capacitorUEV
        type: integer
        optional: true
        default: 20
        label: UEV Capacitors Count Line
        description: UEV Capacitors detected line

      - key: capacitorUIV
        type: integer
        optional: true
        default: 21
        label: UIV Capacitors Count Line
        description: UIV Capacitors detected line

      - key: capacitorUMV
        type: integer
        optional: true
        default: 22
        label: UMV Capacitors Count Line
        description: UMV Capacitors detected line

      - key: wirelessStored
        type: integer
        optional: true
        default: 23
        label: Wireless Stored Line
        description: Total wireless EU line

  configTemplate: |
    local sides = require("sides")
    local colors = require("colors")

    local loggerLib = require("lib.logger-lib")
    local discordLoggerHandler = require("lib.logger-handler.discord-logger-handler-lib")
    local fileLoggerHandler = require("lib.logger-handler.file-logger-handler-lib")

    local lsc = require("src.lsc")

    local gtnhController = require("src.controllers.gtnh-controller")
    local wirelessRedstoneController = require("src.controllers.wireless-redstone-controller")
    local redstoneController = require("src.controllers.redstone-controller")
    local redstoneBundledController = require("src.controllers.redstone-bundled-controller")

    local config = {
      enableAutoUpdate = true, -- Enable auto update on start

      logger = loggerLib:newFormConfig({
        name = "<field>name</field>",
        timeZone = <field>timeZone</field>, -- Your time zone
        handlers = {
          discordLoggerHandler:newFormConfig({
            logLevel = "warning",
            messageFormat = "{Time:%d.%m.%Y %H:%M:%S} [{LogLevel}]: {Message}",
            discordWebhookUrl = "<field>discordWebhookUrl</field>" -- Discord Webhook URL
          }),
          fileLoggerHandler:newFormConfig({
            logLevel = "info",
            messageFormat = "{Time:%d.%m.%Y %H:%M:%S} [{LogLevel}]: {Message}",
            filePath = "logs.log"
          })
        }
      }),

      lsc = lsc:newFormConfig({
        useMedian = <field>useMedian</field>, -- Use median in calculations
        wirelessMode = <field>wirelessMode</field>, -- Use wireless network mode
        version = "<field>version</field>", -- Your game version allow ["2.6", "2.7", "custom"]
        customLines = { -- Lines number in SensorInformation for version ["custom"]
          storedEu = <field>storedEu</field>, -- EU Stored line
          capacity = <field>capacity</field>, -- Total Capacity line
          avgEuIn = <field>avgEuIn</field>, -- Avg EU IN: 0 (last 5 seconds) line
          avgEuOut = <field>avgEuOut</field>, -- Avg EU OUT: 0 (last 5 seconds) line
          capacitorUHV = <field>capacitorUHV</field>, -- UHV Capacitors detected line
          capacitorUEV = <field>capacitorUEV</field>, -- UEV Capacitors detected line
          capacitorUIV = <field>capacitorUIV</field>, -- UIV Capacitors detected line
          capacitorUMV = <field>capacitorUMV</field>, -- UMV Capacitors detected line
          wirelessStored = <field>wirelessStored</field> -- Total wireless EU line
        },
      }),

      generators = { -- List of generators to control 
        -- redstoneBundledController:newFormConfig({ -- Controller for control with redstone bundled cable
        --   address = "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa", -- Address of redstone IO
        --   side = sides.north, -- Side of redstone IO to which connected bundled cable
        --   color = colors.magenta, -- Color of bundled cable line
        --   name = "Name", -- Name of generator
        --   enableEuPercent = 75, -- EU percent (0 - 100) at which the generator switches on
        --   disableEuPercent = 98 -- EU percent (0 - 100) at which the generator switches off
        -- }),

        -- redstoneController:newFormConfig({ -- Controller for control with redstone cable
        --   address = "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa", -- Address of redstone IO
        --   side = sides.north, -- Side of redstone IO to which connected redstone
        --   name = "Name", -- Name of generator
        --   enableEuPercent = 75, -- EU percent (0 - 100) at which the generator switches on
        --   disableEuPercent = 98 -- EU percent (0 - 100) at which the generator switches off
        -- }),

        -- gtnhController:newFormConfig({ -- Controller for direct control of the generator
        --   address = "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa", -- Address of adapter which connected to gtnh generator
        --   name = "Name", -- Name of generator
        --   enableEuPercent = 20, -- EU percent (0 - 100) at which the generator switches on
        --   disableEuPercent = 98 -- EU percent (0 - 100) at which the generator switches off
        -- }),

        -- wirelessRedstoneController:newFormConfig({ -- Controller for control with wireless redstone (FOR MOD WR-CBE NOT FOR GT WIRELESS COVERS)
        --   address = "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa", -- Address of adapter which connected to gtnh generator
        --   frequency = 100, -- Frequency of wireless redstone (FOR MOD WR-CBE NOT FOR GT WIRELESS COVERS)
        --   name = "Name", -- Name of generator
        --   enableEuPercent = 20, -- EU percent (0 - 100) at which the generator switches on
        --   disableEuPercent = 98 -- EU percent (0 - 100) at which the generator switches off
        -- })
      },

      machines = { -- List of machines to control
      -- redstoneBundledController:newFormConfig({ -- Controller for control with redstone bundled cable
        --   address = "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa", -- Address of redstone IO
        --   side = sides.north, -- Side of redstone IO to which connected bundled cable
        --   color = colors.magenta, -- Color of bundled cable line
        --   name = "Name", -- Name of machine
        --   enableEuPercent = 75, -- EU percent (0 - 100) at which the machine switches on
        --   disableEuPercent = 98 -- EU percent (0 - 100) at which the machine switches off
        -- }),

        -- redstoneController:newFormConfig({ -- Controller for control with redstone cable
        --   address = "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa", -- Address of redstone IO
        --   side = sides.north, -- Side of redstone IO to which connected redstone
        --   name = "Name", -- Name of machine
        --   enableEuPercent = 75, -- EU percent (0 - 100) at which the machine switches on
        --   disableEuPercent = 98 -- EU percent (0 - 100) at which the machine switches off
        -- }),

        -- gtnhController:newFormConfig({ -- Controller for direct control of the machine
        --   address = "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa", -- Address of adapter which connected to gtnh machine
        --   name = "Name", -- Name of machine
        --   enableEuPercent = 20, -- EU percent (0 - 100) at which the machine switches on
        --   disableEuPercent = 98 -- EU percent (0 - 100) at which the machine switches off
        -- }),

        -- wirelessRedstoneController:newFormConfig({ -- Controller for control with wireless redstone (FOR MOD WR-CBE NOT FOR GT WIRELESS COVERS)
        --   address = "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa", -- Address of adapter which connected to gtnh machine
        --   frequency = 100, -- Frequency of wireless redstone (FOR MOD WR-CBE NOT FOR GT WIRELESS COVERS)
        --   name = "Name", -- Name of machine
        --   enableEuPercent = 20, -- EU percent (0 - 100) at which the machine switches on
        --   disableEuPercent = 98 -- EU percent (0 - 100) at which the machine switches off
        -- })
      }
    }

    return config